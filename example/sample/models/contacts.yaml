name: Contacts
type: object
key: _id
data:
  min: 5
  max: 10
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: |
        `contact_${this.contact_id}`;
  doc_type:
    type: string
    description: The document type
    data:
      value: "contact"
  contact_id:
    type: string
    description: The contact_id
    data:
      build: "chance.guid();"
  created_on:
    type: integer
    description: An epoch time of when the contact was created
    data:
      build: "new Date(faker.date.past()).getTime();"
  modified_on:
    type: integer
    description: An epoch time of when the contact was last modified
    data:
      build: "new Date(faker.date.recent()).getTime();"
  details:
    description: An object of the contacts details
    schema:
      $ref: '#/definitions/Details'
  phones:
    type: array
    description: An array of phone numbers
    items:
      $ref: '#/definitions/Phone'
      data:
        min: 1
        max: 3
  emails:
    type: array
    description: An array of emails
    items:
      $ref: '#/definitions/Email'
      data:
        min: 1
        max: 2
  addresses:
    type: array
    description: An array of addresses
    items:
      $ref: '#/definitions/Address'
      data:
        min: 1
        max: 2
  children:
    type: array
    description: An array of children
    items:
      $ref: '#/definitions/Children'
      data:
        min: 1
        max: 8
  notes:
    type: string
    description: Notes about the contact
    data:
      fake: "{{lorem.sentence}}"
  tags:
    type: array
    items:
      type: string
      data:
        min: 1
        max: 6
        build: "faker.random.word();"
definitions:
  Email:
    type: string
    data:
      build: "faker.internet.email();"
  Phone:
    type: object
    properties:
      type:
        type: string
        description: The phone type
        data:
          build: "faker.random.arrayElement([ 'Home', 'Work', 'Mobile', 'Main', 'Other' ]);"
      phone_number:
        type: string
        description: The phone number
        data:
          build: "faker.phone.phoneNumber().replace(/\s*x[0-9]+$/, '');"
      extension:
        type: string
        description: The phone extension
        data:
          build: "chance.bool({ likelihood: 20 }) ? chance.integer({ min: 1000, max: 9999 }).toString() : null;"
  Address:
    type: object
    properties:
      type:
        type: string
        description: The address type
        data:
          build: "faker.random.arrayElement([ 'Home', 'Work', 'Other' ]);"
      address_1:
        type: string
        description: The address 1
        data:
          build: "`${faker.address.streetAddress()} ${faker.address.streetSuffix()}`"
      address_2:
        type: string
        description: The address 2
        data:
          build: "chance.bool({ likelihood: 35 }) ? faker.address.secondaryAddress() : null;"
      locality:
        type: string
        description: The locality
        data:
          build: "faker.address.city();"
      region:
        type: string
        description: The region / state / province
        data:
          build: "faker.address.stateAbbr();"
      postal_code:
        type: string
        description: The zip code / postal code
        data:
          build: "faker.address.zipCode();"
      country:
        type: string
        description: The country code
        data:
          build: "faker.address.countryCode();"
  Children:
    type: object
    properties:
      first_name:
        type: string
        description: The childs first_name
        data:
          fake: "{{name.firstName}}"
      gender:
        type: string
        description: The childs gender
        data:
          build: "chance.bool({ likelihood: 70 })? faker.random.arrayElement([ 'M', 'F' ]) : null;"
      age:
        type: integer
        description: The childs age
        data:
          build: "chance.integer({ min: 1, max: 17 })"
  Details:
    type: object
    properties:
      prefix:
        type: string
        description: The contacts prefix
        data:
          build: "chance.bool() ? chance.prefix() : null;"
      first_name:
        type: string
        description: The contacts first_name
        data:
          fake: "{{name.firstName}}"
      middle_name:
        type: string
        description: The contacts middle_name
        data:
          build: "chance.bool() ? chance.name({ middle: true }).split(' ')[1] : null;"
      last_name:
        type: string
        description: The contacts last_name
        data:
          build: "chance.bool({ likelihood: 70 }) ? faker.name.lastName() : null;"
      company:
        type: string
        description: The contacts company
        data:
          build: "chance.bool({ likelihood: 30 }) ? faker.company.companyName() : null;"
      job_title:
        type: string
        description: The contacts job_title
        data:
          build: "chance.bool({ likelihood: 30 }) ? faker.name.jobTitle() : null;"
      dob:
        type: string
        description: The contacts dob
        data:
          build: "chance.bool() ? new Date(faker.date.past()).toISOString().split('T')[0] : null;"
      nickname:
        type: string
        description: The contacts nickname
        data:
          build: "chance.bool({ likelihood: 10 }) ? faker.random.word() : null;"
